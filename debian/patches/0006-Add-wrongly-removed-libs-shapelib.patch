From: Alec Leamas <leamas.alec@gmail.com>
Date: Fri, 23 May 2025 08:55:31 +0200
Subject: Add wrongly removed libs/shapelib

---
 libs/shapelib/CMakeLists.txt                       | 92 ++++++++++++++++++++++
 libs/shapelib/cmake/FindShapelib.cmake             | 27 +++++++
 libs/shapelib/cmake/PatchFile.cmake                | 32 ++++++++
 ...1-cmake-Add-guard-for-multiple-inclusions.patch | 37 +++++++++
 .../0002-cmake-Make-BUILD_TESTING-an-option.patch  | 27 +++++++
 ...il.h-Use-correct-include-gdal-cpol.h-path.patch | 24 ++++++
 6 files changed, 239 insertions(+)
 create mode 100644 libs/shapelib/CMakeLists.txt
 create mode 100644 libs/shapelib/cmake/FindShapelib.cmake
 create mode 100644 libs/shapelib/cmake/PatchFile.cmake
 create mode 100644 libs/shapelib/patches/0001-cmake-Add-guard-for-multiple-inclusions.patch
 create mode 100644 libs/shapelib/patches/0002-cmake-Make-BUILD_TESTING-an-option.patch
 create mode 100644 libs/shapelib/patches/0003-shapefil.h-Use-correct-include-gdal-cpol.h-path.patch

diff --git a/libs/shapelib/CMakeLists.txt b/libs/shapelib/CMakeLists.txt
new file mode 100644
index 0000000..6a50ffe
--- /dev/null
+++ b/libs/shapelib/CMakeLists.txt
@@ -0,0 +1,92 @@
+# ~~~
+# Add linkage to the shapelib library
+#
+# On hosts having the package installed in system locations found by
+# cmake use the system code. If not, download sources from shapelib
+# github site and apply patches.
+#
+# Exports: ocpn::shapelib transitive link target
+#
+# License:      GPLv3+
+# Copyright (c) 2023 Alec Leamas
+# ~~~
+
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 3 of the License, or
+# (at your option) any later version.
+
+cmake_minimum_required(VERSION 3.10.0)
+
+if (TARGET ocpn::shapelib)
+  return ()
+endif ()
+
+set(shapelib "https://github.com/OSGeo/shapelib")
+set(src_url "${shapelib}/archive/refs/tags/v1.6.1.tar.gz")
+set(src_hash MD5=ccdcabbc685eb575120fa3eb61003280)
+
+list(APPEND patches
+  0001-cmake-Add-guard-for-multiple-inclusions.patch
+  0002-cmake-Make-BUILD_TESTING-an-option.patch
+  0003-shapefil.h-Use-correct-include-gdal-cpol.h-path.patch
+)
+
+if (POLICY CMP0135)
+  cmake_policy(SET CMP0135 NEW)
+endif ()
+
+list(PREPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_LIST_DIR}/cmake)
+
+add_library(_SHAPELIB_IF INTERFACE)
+add_library(ocpn::shapelib ALIAS _SHAPELIB_IF)
+
+#  Check for system lib and use it if found. Done.
+#
+find_package(Shapelib)
+if (SHAPELIB_FOUND)
+  message(STATUS "Using system shapelib ")
+  target_link_libraries(_SHAPELIB_IF INTERFACE shapelib::shapelib)
+  return ()
+endif ()
+
+# Download sources from github
+#
+if (${CMAKE_VERSION} VERSION_LESS 3.20)
+  message(WARNING "Using downloaded sources requires cmake >= 3.20")
+endif ()
+
+if (POLICY CMP0169)
+  # FetchContent_Populate cannot be used if NEW
+  cmake_policy(SET CMP0169 OLD)
+endif ()
+
+include(FetchContent)
+FetchContent_Declare(shapelib_src URL ${src_url} URL_HASH ${src_hash})
+FetchContent_Populate(shapelib_src)
+FetchContent_GetProperties(shapelib_src SOURCE_DIR src_dir)
+message(STATUS "Using downloaded shapelib at ${src_dir}")
+
+# Apply patches
+#
+foreach (patch ${patches})
+  execute_process(
+    COMMAND ${CMAKE_COMMAND}
+      -Dpatch_file=${CMAKE_CURRENT_SOURCE_DIR}/patches/${patch}
+      -Dpatch_dir=${src_dir}
+      -P ${CMAKE_CURRENT_SOURCE_DIR}/cmake/PatchFile.cmake
+    COMMAND ${CMAKE_COMMAND} -E echo "-- Applying patch ${patch}"
+  )
+endforeach ()
+
+# Configure
+#
+if (NOT TARGET shp)
+  set(BUILD_TESTING OFF CACHE BOOL "")
+  set(BUILD_APPS OFF CACHE BOOL "")
+  set(BUILD_SHARED_LIBS OFF CACHE BOOL "")
+  set(USE_CPL OFF CACHE BOOL "")
+  add_subdirectory(${src_dir} shapelib_dir)
+endif ()
+target_link_libraries(_SHAPELIB_IF INTERFACE shp)
+target_include_directories(_SHAPELIB_IF INTERFACE "${src_dir}")
diff --git a/libs/shapelib/cmake/FindShapelib.cmake b/libs/shapelib/cmake/FindShapelib.cmake
new file mode 100644
index 0000000..c55b618
--- /dev/null
+++ b/libs/shapelib/cmake/FindShapelib.cmake
@@ -0,0 +1,27 @@
+# Find the shapelib a k a shp libraries
+#
+# Defines:
+#     SHAPELIB_FOUND - true if shapelib libs and headers found
+#
+# Exports:
+#     shapelib::shapelib transitive link target if SHAPELIB_FOUND is true
+#
+# Copyright (c) 2024 Alec Leamas
+# License: GPL 2+
+
+find_path(SHAPELIB_INCLUDE_DIR shapefil.h)
+
+find_library(SHAPELIB_LIBRARY NAMES shp shapelib)
+
+find_package_handle_standard_args(Shapelib
+    DEFAULT_MSG SHAPELIB_LIBRARY SHAPELIB_INCLUDE_DIR
+)
+
+if (Shapelib_FOUND)
+  add_library(_shapelib INTERFACE)
+  target_link_libraries(_shapelib INTERFACE ${SHAPELIB_LIBRARY})
+  target_include_directories(_shapelib INTERFACE ${SHAPELIB_INCLUDE_DIR})
+  add_library(shapelib::shapelib ALIAS _shapelib)
+endif()
+
+mark_as_advanced(SHAPELIB_INCLUDE_DIR SHAPELIB_LIBRARY)
diff --git a/libs/shapelib/cmake/PatchFile.cmake b/libs/shapelib/cmake/PatchFile.cmake
new file mode 100644
index 0000000..4f201b6
--- /dev/null
+++ b/libs/shapelib/cmake/PatchFile.cmake
@@ -0,0 +1,32 @@
+# use GNU Patch from any platform
+#
+# Source: https://github.com/scivision/cmake-patch-file
+# License: MIT
+
+if (WIN32)
+  # prioritize Git Patch on Windows as other Patches may be very old and incompatible.
+  find_package(Git)
+  if (Git_FOUND)
+    get_filename_component(GIT_DIR ${GIT_EXECUTABLE} DIRECTORY)
+    get_filename_component(GIT_DIR ${GIT_DIR} DIRECTORY)
+  endif ()
+endif ()
+
+find_program(PATCH NAMES patch HINTS ${GIT_DIR} PATH_SUFFIXES usr/bin)
+
+if (NOT PATCH)
+  message(FATAL_ERROR "Did not find GNU Patch")
+endif()
+
+execute_process(
+  COMMAND ${PATCH} -p1 --ignore-whitespace
+  INPUT_FILE ${patch_file}
+  WORKING_DIRECTORY ${patch_dir}
+  TIMEOUT 15
+  RESULT_VARIABLE ret
+)
+if (NOT ret EQUAL 0)
+  message(
+    FATAL_ERROR "Failed to apply ${patch_file} in ${patch_dir} using ${PATCH}"
+  )
+endif()
diff --git a/libs/shapelib/patches/0001-cmake-Add-guard-for-multiple-inclusions.patch b/libs/shapelib/patches/0001-cmake-Add-guard-for-multiple-inclusions.patch
new file mode 100644
index 0000000..cdd336f
--- /dev/null
+++ b/libs/shapelib/patches/0001-cmake-Add-guard-for-multiple-inclusions.patch
@@ -0,0 +1,37 @@
+From ea213a6ddec19af8250bcae8bcea3a004aace0c1 Mon Sep 17 00:00:00 2001
+From: Alec Leamas <leamas.alec@gmail.com>
+Date: Sun, 13 Apr 2025 22:11:02 +0200
+Subject: [PATCH 1/2] cmake: Add guard for multiple inclusions
+
+Forwarded: https://github.com/leamas/opencpn
+
+---
+ CMakeLists.txt | 6 +++++-
+ 1 file changed, 5 insertions(+), 1 deletion(-)
+
+diff --git a/CMakeLists.txt b/CMakeLists.txt
+index 5887924..ad794ae 100644
+--- a/CMakeLists.txt
++++ b/CMakeLists.txt
+@@ -7,6 +7,11 @@
+ #
+ # See README.CMake
+
++set(PACKAGE shp)
++if (TARGET ${PACKAGE})
++  return ()
++endif ()
++
+ # Version 3.11 or above of cmake is currently required for all platforms.
+ cmake_minimum_required(VERSION 3.11)
+ project(shapelib C CXX)
+@@ -49,7 +54,6 @@ if(BUILD_SHARED_LIBS AND (WIN32 OR CYGWIN))
+   set(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_BINARY_DIR}/dll)
+ endif()
+
+-set(PACKAGE shp)
+
+ # Set up install locations.
+ set(
+--
+2.49.0
diff --git a/libs/shapelib/patches/0002-cmake-Make-BUILD_TESTING-an-option.patch b/libs/shapelib/patches/0002-cmake-Make-BUILD_TESTING-an-option.patch
new file mode 100644
index 0000000..68dd9eb
--- /dev/null
+++ b/libs/shapelib/patches/0002-cmake-Make-BUILD_TESTING-an-option.patch
@@ -0,0 +1,27 @@
+From ace28580bf90631c435293fa20116cbe02826104 Mon Sep 17 00:00:00 2001
+From: Alec Leamas <leamas.alec@gmail.com>
+Date: Sun, 13 Apr 2025 22:14:47 +0200
+Subject: [PATCH 2/2] cmake: Make BUILD_TESTING an option
+
+Forwarded: https://github.com/leamas/opencpn
+---
+ CMakeLists.txt | 3 ++-
+ 1 file changed, 2 insertions(+), 1 deletion(-)
+
+diff --git a/CMakeLists.txt b/CMakeLists.txt
+index ad794ae..4734b51 100644
+--- a/CMakeLists.txt
++++ b/CMakeLists.txt
+@@ -206,8 +206,9 @@ endif()
+
+ find_program(BASH_EXECUTABLE bash)
+ if(BASH_EXECUTABLE)
+-  set(BUILD_TESTING ON CACHE BOOL "")
++  option(BUILD_TESTING "Build tests"  ON)
+ else()
++  set(BUILD_TESTING OFF CACHE BOOL "Disable tests")
+   message(STATUS "WARNING: bash not available so disabling testing")
+ endif()
+
+--
+2.49.0
diff --git a/libs/shapelib/patches/0003-shapefil.h-Use-correct-include-gdal-cpol.h-path.patch b/libs/shapelib/patches/0003-shapefil.h-Use-correct-include-gdal-cpol.h-path.patch
new file mode 100644
index 0000000..6eaf4fe
--- /dev/null
+++ b/libs/shapelib/patches/0003-shapefil.h-Use-correct-include-gdal-cpol.h-path.patch
@@ -0,0 +1,24 @@
+From cec1e46b403656ab1c3441275219d3ca7ef2a1d2 Mon Sep 17 00:00:00 2001
+From: Alec Leamas <leamas.alec@gmail.com>
+Date: Tue, 15 Apr 2025 09:13:03 +0200
+Subject: [PATCH] shapefil.h: Use correct include gdal/cpol.h path
+
+---
+ shapefil.h | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/shapefil.h b/shapefil.h
+index 47b2e30..7db28c3 100644
+--- a/shapefil.h
++++ b/shapefil.h
+@@ -19,7 +19,7 @@
+ #include <stdio.h>
+
+ #ifdef USE_CPL
+-#include "cpl_conv.h"
++#include "gdal/cpl_conv.h"
+ #endif
+
+ #ifdef __cplusplus
+--
+2.49.0
