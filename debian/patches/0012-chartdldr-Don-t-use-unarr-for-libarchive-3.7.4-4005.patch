From 4e9c1ee1e077d3a5f1163209ded8ef5654a118c3 Mon Sep 17 00:00:00 2001
From: Alec Leamas <leamas.alec@gmail.com>
Date: Tue, 20 Aug 2024 19:54:21 +0200
Subject: [PATCH] chartdldr: Don't use unarr for libarchive >= 3.7.4 (#4005)

Check the libarchive version and avoid using unarr for versions
recent enough to have a working rar support.

Applied-upstream: https://github.com/OpenCPN/OpenCPN/commit/4e9c1ee1e
---
 plugins/chartdldr_pi/CMakeLists.txt | 58 ++++++++++++++++-------------
 1 file changed, 32 insertions(+), 26 deletions(-)

diff --git a/plugins/chartdldr_pi/CMakeLists.txt b/plugins/chartdldr_pi/CMakeLists.txt
index 73b6eba89..5798caf37 100644
--- a/plugins/chartdldr_pi/CMakeLists.txt
+++ b/plugins/chartdldr_pi/CMakeLists.txt
@@ -19,20 +19,27 @@ set(VERSION_PATCH "0")
 set(VERSION_DATE "2019-12-09")
 
 if (NOT CMAKE_BUILD_TYPE)
-  set(CMAKE_BUILD_TYPE
-      Release
-      CACHE
-        STRING
-        "Choose the type of build, options are: None Debug Release RelWithDebInfo MinSizeRel."
-        FORCE
+  set(CMAKE_BUILD_TYPE Release CACHE STRING
+      "Choose build type [None Debug Release RelWithDebInfo MinSizeRel]"
+      FORCE
   )
-endif (NOT CMAKE_BUILD_TYPE)
+endif ()
+message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
 
 include_directories(${CMAKE_SOURCE_DIR}/include)
 
-message(STATUS "Build type: ${CMAKE_BUILD_TYPE}")
+# LibArchive_VERSION is defined by cmake 3.17+ i. e. Focal+; Focal needs unarr.
+# See #4005.
+find_package(LibArchive REQUIRED)
+if (DEFINED LibArchive_VERSION AND LibArchive_VERSION VERSION_GREATER 3.7.3)
+  option(CHARTDLDR_USE_UNARR "Use unarr to extract RAR archives" OFF)
+else ()
+  option(CHARTDLDR_USE_UNARR "Use unarr to extract RAR archives" ON)
+endif ()
+if (CHARTDLDR_USE_UNARR)
+  add_definitions(-DCHARTDLDR_RAR_UNARR)
+endif ()
 
-# SET(CMAKE_BUILD_TYPE Debug)
 set(CMAKE_MACOSX_RPATH "ON")
 
 include("cmake/PluginConfigure.cmake")
@@ -134,30 +141,27 @@ if (wxWidgets_VERSION_STRING GREATER 2.9)
   endif (OCPN_USE_CHART_LIST)
 endif (wxWidgets_VERSION_STRING GREATER 2.9)
 
-option(CHARTDLDR_USE_UNARR
-       "Use unarr to extract RAR archives instead of libarchive" ON
-)
-if (CHARTDLDR_USE_UNARR)
-  add_definitions(-DCHARTDLDR_RAR_UNARR)
-endif ()
-
 add_definitions(-D_FILE_OFFSET_BITS=64)
 
 include_directories(src/unarr/)
 pkg_search_module(UNARR libunarr unarr)
 use_bundled_lib(USE_BUNDLED_UNARR unarr)
-if (UNARR_FOUND AND NOT USE_BUNDLED_UNARR)
-  message(STATUS "chartdldr_pi: Building with system unarr")
-  include_directories(${UNARR_INCLUDE_DIR})
-  set(SRC_UNARR "")
+if (CHARTDLDR_USE_UNARR)
+  if (UNARR_FOUND AND NOT USE_BUNDLED_UNARR)
+    message(STATUS "chartdldr_pi: Using system unarr for rar files")
+    include_directories(${UNARR_INCLUDE_DIR})
+    set(SRC_UNARR "")
+  else ()
+    message(STATUS "chartdldr_pi: using bundled unarr for rar files")
+    add_library(UNARR ${SRC_UNARR})
+    include_directories(src/unarr)
+  endif ()
+  add_library(${PACKAGE_NAME} SHARED ${SRC_UNARR} ${SRC_CHARTDLDR})
 else ()
-  message(STATUS "chartdldr_pi: Building with bundled unarr")
-  add_library(UNARR ${SRC_UNARR})
-  include_directories(src/unarr)
+  message(STATUS "chartdldr_pi: using libarchive for rar files")
+  add_library(${PACKAGE_NAME} SHARED ${SRC_CHARTDLDR})
 endif ()
 
-add_library(${PACKAGE_NAME} SHARED ${SRC_UNARR} ${SRC_CHARTDLDR})
-
 find_package(OcpnLibarchive)
 if (NOT TARGET ocpn::libarchive)
   message(FATAL:_ERROR "No libarchive!!!")
@@ -185,7 +189,9 @@ if (QT_ANDROID)
   add_definitions(
     "-Wno-inconsistent-missing-override -Wno-potentially-evaluated-expression"
   )
-endif (QT_ANDROID)
+else ()
+  add_definitions(-DDLDR_USE_LIBARCHIVE)
+endif ()
 
 if ("${CMAKE_CXX_COMPILER_ID}" MATCHES "Clang|AppleClang")
   # FIXME: This is to broad, needs better handling after 5.0.0
-- 
2.46.0

